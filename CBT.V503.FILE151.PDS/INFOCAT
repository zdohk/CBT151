*PROCESS GN,SEQ(73,77),A,OF;                                            00001**4
 INFOCAT: PROC REORDER OPTIONS(MAIN);                                   00002
-/*---------------------------------------------------------------------00003
   THIS PROGRAM READS THE OUTPUT OF IDCAMS "LISTCAT ALL" AND PRODUCES   00004
   INPUT FOR INFO/MVS BLGOZB PROGRAM.  BLGOZC MAY BE USED TO CREATE     00005**6
   AN INFO/MVS-SEARCHABLE DATA BASE.                                    00006
   CHANGED 10/21/88 JDS MODIFIED TO PRODUCE INFO/MVS R3 OUTPUT.
   CHANGED 10/26/88 JDS ADDED CHECKS FOR NEW KEYWORDS ON CREATION DATE
                        AND DEVICE TYPES OF DASD AND TAPE.
 ---------------------------------------------------------------------*/00007
         DCL INREC CHAR(255) VARYING STATIC,                            00008
             CARD  CHAR(80)  STATIC     INIT((80)' '),                  00009**6
             SYSIN  FILE RECORD SEQUENTIAL INPUT,                       00010**6
             SYSUT1 FILE RECORD SEQUENTIAL INPUT,                       00011**6
             SYSUT2 FILE RECORD SEQUENTIAL OUTPUT                       00012
                    ENV(FB RECSIZE(80) BLKSIZE(32640) TOTAL),           00013
             1 OUT1 STATIC,     /* HEADER LINE */                       00014
               2 ID      CHAR(2)        INIT('H '),                     00016**6
               2 ENTRYL  CHAR(1)        INIT('U'),                      00017**6
               2 ENTRYN  PIC '999999'   INIT(0),                        00018**6
               2 FIL102  CHAR(63)       INIT((63)' '),                  00019**6
               2 FIL103  CHAR(8)        INIT((8)' '),                   00015
             1 OUT2 STATIC,     /* TITLE LINE 1 */                      00021
               2 ID      CHAR(2)        INIT('T '),                     00023**6
               2 TIMEX   CHAR(15)       INIT((15)' '),                  00024**6
               2 DATET   CHAR(09)       INIT((09)' '),                  00025**6
               2 FIL201  CHAR(05)       INIT('CAT: '),                  00026**6
               2 CATNAME CHAR(41)       INIT((41)' '),                  00027**6
               2 FIL202  CHAR(8)        INIT((8)' '),                   00015
             1 OUT3 STATIC,     /* TITLE LINE 2 */                      00028
               2 ID      CHAR(2)        INIT('T '),                     00030**6
               2 FIL301  CHAR(7)        INIT('ENTRY: '),                00031**6
               2 ENTRYT  CHAR(11)       INIT((11)' '),                  00032**6
               2 FIL302  CHAR(1)        INIT(' '),                      00033**6
               2 ENTRY   CHAR(44)       INIT((44)' '),                  00034**6
               2 FIL303  CHAR(7)        INIT((7)' '),                   00033**6
               2 FIL304  CHAR(8)        INIT((8)' '),                   00015
             1 OUT4 STATIC,     /* KEYWORD LINE */                      00035
               2 ID      CHAR(2)        INIT('K '),                     00037**6
               2 TEXT4   CHAR(70)       INIT((70)' '),                  00038**6
               2 FIL401  CHAR(8)        INIT((8)' '),                   00015
             1 OUT5 STATIC,     /* BLANK LINE BETWEEN KEYWORD / TEXT */ 00039
               2 FIL501  CHAR(1)        INIT(' '),                      00033**6
               2 TEXT5   CHAR(71)       INIT((71)' '),                  00041**6
               2 FIL502  CHAR(8)        INIT((8)' '),                   00015
             1 OUT6 STATIC,     /* TEXT LINE */                         00042
               2 FIL601  CHAR(1)        INIT(' '),                      00033**6
               2 TEXT6   CHAR(71)       INIT((71)' '),                  00044**6
               2 FIL602  CHAR(8)        INIT((8)' '),                   00015
             1 OUT7 STATIC,     /* END LINE */                          00045
               2 ID      CHAR(4)        INIT('$EOM'),                   00047**6
               2 FIL701  CHAR(68)       INIT((68)' '),                  00033**6
               2 FIL702  CHAR(8)        INIT((8)' '),                   00015
             1 OUT8 STATIC,     /* END LINE */                          00045
               2 ID      CHAR(9)        INIT('H G000001'),              00047**6
               2 FIL801  CHAR(63)       INIT((63)' '),                  00033**6
               2 FIL802  CHAR(8)        INIT((8)' '),                   00015
             1 OUT9 STATIC,     /* END LINE */                          00045
               2 ID      CHAR(2)        INIT('T '),                     00047**6
               2 TEXT9   CHAR(21)       INIT('DATA BASE TITLE ENTRY'),
               2 FIL901  CHAR(49)       INIT((49)' '),                  00033**6
               2 FIL902  CHAR(8)        INIT((8)' '),                   00015
             G3REC CHAR(80) VARYING STATIC INIT(' '),                   00048**6
             (EOF1,EOF2) CHAR(1) STATIC INIT('N'),                      00049**6
             KEY(1024)  CHAR(16) VARYING STATIC,                        00050*12
             LINE(1024) CHAR(72) VARYING STATIC,                        00051
             TKEY CHAR(16) VARYING STATIC,
             FYEAR CHAR(2) STATIC INIT('00'),
             FDAY  CHAR(3) STATIC INIT('000'),
             (ENT#,NK,P,I,NT,LX,#IN),                                   00052
             FIXED BIN(15) STATIC INIT(0);                              00053
         ON ENDFILE(SYSUT1) EOF1 = 'Y';                                 00054
         ON ENDFILE(SYSIN)  EOF2 = 'Y';                                 00055**6
         ON UNDEFINEDFILE(SYSIN)  EOF2 = 'Y';                           00056**6
0/*      CREATE DATA BASE TITLE ENTRY */                                00057**6
0        WRITE FILE(SYSUT2) FROM(OUT8);                                 00060**6
         WRITE FILE(SYSUT2) FROM(OUT9);                                 00063**6
         READ FILE(SYSIN) INTO(CARD);                                   00064**6
         DO WHILE (EOF2 = 'N');                                         00065**6
           SUBSTR(TEXT6,1,71) = SUBSTR(CARD,1,71);                      00068**8
           WRITE FILE(SYSUT2) FROM(OUT6);                               00069**7
           READ FILE(SYSIN) INTO(CARD);                                 00070**6
           END;                                                         00071**6
         WRITE FILE(SYSUT2) FROM(OUT7);                                 00074**8
0/*      READ FIRST RECORD */                                           00075
0        READ FILE(SYSUT1) INTO(INREC);                                 00076
         #IN = 1;                                                       00077
0/*      CREATE FIRST ENTRY */                                          00078
0        CALL KEYWORD('TITLE');                                         00079
         CALL ADD('THIS FILE (U) IS THE OUTPUT FROM IDCAMS "LISTCAT ALL"00080
 .');                                                                   00081
         CALL WRITE;                                                    00082
0/*      LOOP WHILE READING INPUT */                                    00083
0        DO WHILE (EOF1 = 'N');                                         00084
0/*        PAGE HEADING */                                              00085
0          IF SUBSTR(INREC,1,9) = '1IDCAMS  ' THEN DO;                  00086
             IF TIMEX = ' ' THEN DO;                                    00087
               TIMEX = SUBSTR(INREC,68,15);                             00088
               DATET = SUBSTR(INREC,90,09);                             00089
               END;                                                     00090
             GO TO READ;                                                00091
             END;                                                       00092
0/*        PAGE SUB-HEADING */                                          00093
0          IF SUBSTR(INREC,1,1) = '-' THEN                              00094
           IF SUBSTR(INREC,31,24) = 'LISTING FROM CATALOG -- ' THEN DO; 00095
             IF SUBSTR(INREC,55) ¬= CATNAME THEN DO;                    00096
               CALL WRITE;                                              00097
               CATNAME = SUBSTR(INREC,55);                              00098
               END;                                                     00099
             GO TO READ;                                                00100
             END;                                                       00101
0/*        NEW ENTRY */                                                 00102**6
0          IF SUBSTR(INREC,1,7)  = '0ALIAS '                            00103**6
            | SUBSTR(INREC,1,9)  = '0CLUSTER '                          00104**6
            | SUBSTR(INREC,1,9)  = '0NONVSAM '                          00105**6
            | SUBSTR(INREC,1,13) = '0USERCATALOG '                      00107**6
            | SUBSTR(INREC,1,11) = '0PAGESPACE '                        00107**6
            | SUBSTR(INREC,1,10) = '0GDG BASE '                         00107**6
            | SUBSTR(INREC,1,8)  = '0VOLUME ' THEN DO;                  00108**6
             CALL WRITE;                                                00109
             ENTRYT = SUBSTR(INREC,2,INDEX(INREC,' ')-2);               00110
             CALL KEYWORD(SUBSTR(INREC,2,INDEX(INREC,' ')-2));          00111
             ENTRY = SUBSTR(INREC,18);                                  00112
             CALL KEYWORD(SUBSTR(INREC,18));                            00113
             IF SUBSTR(INREC,26,1) ¬= ' ' THEN DO;
                CALL KEYWORD(SUBSTR(INREC,18,                           00113
                INDEX(SUBSTR(INREC,18,9),'.')-1));                      00113
                END;                                                    00114
             END;                                                       00114
0          IF SUBSTR(INREC,2,45) =                                      00115
           '         THE NUMBER OF ENTRIES PROCESSED WAS:' THEN DO;     00116
             CALL WRITE;                                                00117
             ENTRYT  = 'STATISTICS';                                    00118*10
             ENTRY   = 'ENTRY';                                         00119*10
             CALL KEYWORD('STATISTICS');                                00120
             END;                                                       00121
0          IF SUBSTR(INREC,38,16) = 'CREATION--------' THEN DO;
             FYEAR = SUBSTR(INREC,56,2);
             FDAY  = SUBSTR(INREC,59,3);
             SUBSTR(G3REC,1,7) = 'CRDATE/';
             SUBSTR(G3REC,8,2) = FYEAR;
             SUBSTR(G3REC,10,3) = FDAY;
             CALL KEYWORD(SUBSTR(G3REC,1,12));
             SUBSTR(G3REC,1,7) = 'CRYEAR/';
             SUBSTR(G3REC,8,2) = FYEAR;
             SUBSTR(G3REC,10,3) = FDAY;
             CALL KEYWORD(SUBSTR(G3REC,1,9));
             END;
0          IF SUBSTR(INREC,38,10) = 'DEVTYPE---' THEN DO;
             IF SUBSTR(INREC,53,4) = '3010' THEN
             CALL KEYWORD('DASD');
             IF SUBSTR(INREC,53,4) = '3200' THEN
             CALL KEYWORD('TAPE');
             END;
0          IF SUBSTR(INREC,9,10) = 'DEVTYPE---' THEN DO;
             IF SUBSTR(INREC,24,4) = '3010' THEN
             CALL KEYWORD('DASD');
             IF SUBSTR(INREC,24,4) = '3200' THEN
             CALL KEYWORD('TAPE');
             END;
0          IF SUBSTR(INREC,2,16) = '   DATA ------- '                   00122
            | SUBSTR(INREC,2,16) = '   INDEX ------ '                   00123
            | SUBSTR(INREC,2,16) = '       ALIAS----'                   00124
            | SUBSTR(INREC,2,16) = '       USERCAT--'                   00124
            | SUBSTR(INREC,2,16) = '       NONVSAM--' THEN              00125
           CALL KEYWORD(SUBSTR(INREC,18));                              00126
0          IF SUBSTR(INREC,2,16) = '         DSN----' THEN              00127
           CALL KEYWORD(SUBSTR(INREC,18,                                00128
           INDEX(SUBSTR(INREC,18,45),' ')-1));                          00129
0          IF SUBSTR(INREC,2,25) = '       VOLSER------------' THEN     00130
           CALL KEYWORD(SUBSTR(INREC,27,                                00131
           INDEX(SUBSTR(INREC,27,7),' ')-1));                           00132
0          IF SUBSTR(INREC,2,25) = '       OWNER-IDENT-------' THEN     00133
           IF SUBSTR(INREC,27,6) ¬= '(NULL)' THEN                       00134
           CALL KEYWORD(SUBSTR(INREC,27,                                00135
           INDEX(SUBSTR(INREC,27,9),' ')-1));                           00136
0          I = LENGTH(INREC);                                           00137
           DO WHILE (SUBSTR(INREC,I,1) = ' ');                          00138
             I = I - 1;                                                 00139
             END;                                                       00140
           IF I > 71 THEN DO;                                           00141
             CALL ADD(SUBSTR(INREC,2,64));                              00142
             CALL ADD(SUBSTR(INREC,62));                                00143
             END;                                                       00144
           ELSE DO;                                                     00145
             CALL ADD(SUBSTR(INREC,2));                                 00146
             END;                                                       00147
 READ:     READ FILE(SYSUT1) INTO(INREC);                               00148
           #IN = #IN + 1;                                               00149
           END;                                                         00150
         CALL WRITE;                                                    00151
         RETURN;                                                        00152
1/*      ADD A LINE OF TEXT TO THE CURRENT ENTRY */                     00153
0ADD:    PROC(X);                                                       00154
         DCL X CHAR(*);                                                 00155
         IF NT < 1024 THEN DO;                                          00156
           NT = NT + 1;                                                 00157
           LINE(NT) = ' '||X;                                           00158
           END;                                                         00159
         ELSE DO;                                                       00160
           PUT SKIP(2) EDIT ('MAXIMUM ENTRY LINES EXECEEDED.  ',        00161
           'INPUT RECORD NUMBER ',#IN,'.',                              00162
           'LINE IGNORED: "',X,'".')(2 A,P 'ZZ,ZZZ,ZZ9',A,SKIP,3 A);    00163
           END;                                                         00164
         RETURN;                                                        00165
         END ADD;                                                       00166
1/*      WRITE OUT THE CURRENT ENTRY */                                 00167
0WRITE:  PROC;                                                          00168
         IF NK = 0 THEN RETURN;                                         00169
         ENT# = ENT# + 1;                                               00170
         ENTRYN = ENT#;                                                 00171
         NPIC = NT + 5;                                                 00174**3
         WRITE FILE(SYSUT2) FROM(OUT1);                                 00175
         WRITE FILE(SYSUT2) FROM(OUT2);                                 00178
         WRITE FILE(SYSUT2) FROM(OUT3);                                 00181
         P = 1;                                                         00182
         TEXT4 = (70)' ';                                               00183
         DO I = 1 TO NK;                                                00184
           IF P + LENGTH(KEY(I)) > 70 THEN                              00185
             DO;                                                        00186
             WRITE FILE(SYSUT2) FROM(OUT4);                             00189
             P = 1;                                                     00190
             TEXT4 = (70)' ';                                           00191
             END;                                                       00192
           SUBSTR(TEXT4,P,LENGTH(KEY(I))) = KEY(I);                     00193
           P = P + LENGTH(KEY(I)) + 1;                                  00194
           END;                                                         00195
         WRITE FILE(SYSUT2) FROM(OUT4);                                 00198
         WRITE FILE(SYSUT2) FROM(OUT5);                                 00201
         DO I = 1 TO NT;                                                00202
           TEXT6 = LINE(I);                                             00205
           WRITE FILE(SYSUT2) FROM(OUT6);                               00206
           END;                                                         00207
         WRITE FILE(SYSUT2) FROM(OUT7);                                 00210
         NK,NT = 0;                                                     00211
         RETURN;                                                        00212
         END;                                                           00213
1/*      ADD A KEYWORD TO THE CURRENT ENTRY */                          00214
0KEYWORD: PROC(X);                                                      00215
         DCL X CHAR(*);                                                 00216*13
         IF VERIFY(X,' ') = 0 | LENGTH(X) < 2 THEN RETURN;              00217
         IF NK = 0 THEN DO;                                             00218
           NK = 1;                                                      00219
           KEY(1) = X;                                                  00220*13
           RETURN;                                                      00221
           END;                                                         00222
         ELSE IF NK < 1024 THEN DO;                                     00223
           TKEY = X;
           DO I = 1 TO NK;                                              00224
             IF TKEY = KEY(I) THEN RETURN;                              00225*13
             END;                                                       00226
           NK = NK + 1;                                                 00227
           KEY(NK) = X;                                                 00228*13
           END;                                                         00229
         ELSE DO;                                                       00230
           PUT SKIP(2) EDIT ('MAXIMUM KEYWORDS EXECEEDED.  ',           00231
           'INPUT RECORD NUMBER ',#IN,'.',                              00232
           'KEYWORD IGNORED: "',X,'".')(2 A,P 'ZZ,ZZZ,ZZ9',A,SKIP,3 A); 00233
           END;                                                         00234
         RETURN;                                                        00235
         END KEYWORD;                                                   00236
         END;                                                           00237
